--- question_2/wrong404/wrong_2_404.py	2023-11-27 23:06:57.765661518 +0200
+++ question_2/wrong404/reference.py	2023-11-27 23:06:57.765661518 +0200
@@ -1,44 +1,19 @@
-def unique_day ( var__0 , var__1 ) : 
-  var__2 = 0 
-  try:
-    Pq=iter(range ( len ( var__1 ) ))
-    while True:
-      var__3=next(Pq)
-      
-      if not var__1 [ var__3 ] [ 1 ] == var__0:
-        pass
-      else:  
-        var__2 += 1 
-  except StopIteration:
-    pass
-  if not var__2 == 1:
-    return False 
-  else:
-    return True 
-    
-def unique_month ( var__4 , var__1 ) : 
-  var__2 = 0 
-  try:
-    aYJ=iter(range ( len ( var__1 ) ))
-    while True:
-      var__3=next(aYJ)
-      
-      if not var__1 [ var__3 ] [ 0 ] == var__4:
-        pass
-      else:  
-        var__2 += 1 
-  except StopIteration:
-    pass
-  if not var__2 == 1:
-    return False 
-  else:
-    return True 
-    
-def contains_unique_day ( var__4 , var__1 ) : 
-  if var__4 == 'June' : 
-    return True 
-  elif var__4 == 'May' : 
-    return True 
-  else : 
-    return False 
-  
+def unique_day(day, possible_birthdays):
+    count = 0
+    for birthday in possible_birthdays:
+        if birthday[1] == day:
+            count += 1
+    return count == 1
+
+def unique_month(month, possible_birthdays):
+    count = 0
+    for birthday in possible_birthdays:
+        if birthday[0] == month:
+            count += 1
+    return count == 1
+
+def contains_unique_day(month, possible_birthdays):
+    for birthday in possible_birthdays:
+        if birthday[0] == month and unique_day(birthday[1], possible_birthdays):
+            return True
+    return False
